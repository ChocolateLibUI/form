@import "../base.scss";

chocolatelibui-form-slider {
    $thumbWidth : $unitWidth + 0.4rem;

    display: flex;
    flex-direction: column;
    min-width: 14rem;

    .touch & {
        min-width: 18rem;
    }

    >span {
        @include label;
    }

    >div {
        -webkit-user-select: none;
        user-select: none;
        box-sizing: border-box;
        height: $height;
        position: relative;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        background-color: $backColor;
        border-radius: $cornerRadius;
        border: $border;
        box-shadow: $shadowIn;

        .touch & {
            height: $touchHeight;
        }

        .anim & {
            transition: height var(--sizeTransitionType) var(--sizeTransitionTime), background-color var(--colorTransitionType) var(--colorTransitionTime);
        }

        >div {
            height: 100%;
            left: calc(($thumbWidth / 2) + $height - ($borderThickness * 2));
            width: calc(100% - ($thumbWidth + ($height * 2) - ($borderThickness * 4)));
            position: absolute;

            .touch & {
                left: calc(($thumbWidth / 2) + $touchHeight - ($borderThickness * 2));
                width: calc(100% - ($thumbWidth + ($touchHeight * 2) - ($borderThickness * 4)));
            }

            >div {
                color: $textColor;
                background-color: $backColor;
                border-radius: $cornerRadius;
                border: $border;
                box-shadow: $shadowOut;
                height: $height;
                width: $thumbWidth;
                top: -$borderThickness;
                left: 50%;
                transform: translateX(-50%);
                position: relative;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                text-align: center;
                outline: none;
                line-height: 0.8rem;
                box-sizing: border-box;
                touch-action: none;

                .touch & {
                    height: $touchHeight;
                }

                .anim & {
                    transition: color var(--colorTransitionType) var(--colorTransitionTime), background-color var(--colorTransitionType) var(--colorTransitionTime), box-shadow var(--colorTransitionType) var(--colorTransitionTime);
                }

                >div {
                    font-size: 0.8rem;
                    max-width: $unitWidth;
                    overflow: hidden;
                    white-space: nowrap;
                    text-overflow: ellipsis;
                }


                &:focus {
                    outline: none;
                }

                @media(pointer: fine) {
                    &:hover {
                        background-color: $hoverColor;
                    }

                    &:focus-visible {
                        box-shadow: $shadowOutFocusOut;
                        z-index: 2;
                    }
                }
            }
        }

        >svg {
            position: relative;
            top: -$borderThickness;
            background-color: $backColor;
            border-radius: $cornerRadius;
            border: $border;
            box-shadow: $shadowOut;
            box-sizing: border-box;
            fill: $textColor;
            height: $height;
            width: $height;
            padding: 0.14rem;
            flex-shrink: 0;

            &:nth-child(2) {
                left: -$borderThickness;
            }

            &:nth-child(3) {
                right: -$borderThickness;
            }

            .touch & {
                height: $touchHeight;
                width: $touchHeight;
                padding: 0.2rem;
            }

            .anim & {
                transition: height var(--sizeTransitionType) var(--sizeTransitionTime), max-width var(--sizeTransitionType) var(--sizeTransitionTime), padding var(--sizeTransitionType) var(--sizeTransitionTime), fill var(--colorTransitionType) var(--colorTransitionTime);
            }


            @media(pointer: fine) {
                &:hover {
                    background-color: $hoverColor;
                }

                &:active {
                    box-shadow: $shadowOutActive;
                }
            }
        }
    }
}